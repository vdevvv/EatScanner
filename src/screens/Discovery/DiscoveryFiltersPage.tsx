import React, { useState } from "react";
import {
  View,
  Text,
  StyleSheet,
  SafeAreaView,
  TouchableOpacity,
  TextInput,
  ScrollView,
  FlatList,
  Platform,
} from "react-native";
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Ionicons –¥–ª—è –≤—Å—ñ—Ö —ñ–∫–æ–Ω–æ–∫ (—è–∫ –≤–∫–∞–∑–∞–Ω–æ –Ω–∞ –º–∞–∫–µ—Ç—ñ)
import { Ionicons } from "@expo/vector-icons";

// --- –Ü–ú–Ü–¢–ê–¶–Ü–Ø –î–ê–ù–ò–• –ö–û–ù–¢–ï–ù–¢–£ –ó –ï–ú–û–î–ó–Ü –¢–ê –ö–û–õ–¨–û–†–ê–ú–ò ---
interface MealItem {
  id: string;
  title: string;
  restaurant: string;
  emoji: string;
  color: string;
}

// –ù–∞–±—ñ—Ä —Å—Ç—Ä–∞–≤, —â–æ —ñ–º—ñ—Ç—É—é—Ç—å –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω–∏—Ö –∞—Å—Å–µ—Ç—ñ–≤
const mockMeals: MealItem[] = [
  {
    id: "m1",
    title: "Sushi Dragons",
    restaurant: "Chefs Hall",
    emoji: "üç£",
    color: "#6A5ACD",
  },
  {
    id: "m2",
    title: "Herbed Golden Potatoes",
    restaurant: "A Mano",
    emoji: "ü•î",
    color: "#F4A460",
  },
  {
    id: "m3",
    title: "Salmon Teriyaki",
    restaurant: "Ocean Grill",
    emoji: "üêü",
    color: "#CD5C5C",
  },
  {
    id: "m4",
    title: "Vegan Burger",
    restaurant: "Green Spot",
    emoji: "üçî",
    color: "#228B22",
  },
  {
    id: "m5",
    title: "Spicy Tofu Bowl",
    restaurant: "Zen Bistro",
    emoji: "üå∂Ô∏è",
    color: "#FF6347",
  },
  {
    id: "m6",
    title: "Caprese Salad",
    restaurant: "Pasta House",
    emoji: "ü•ó",
    color: "#98FB98",
  },
];

// --- –ö–û–ú–ü–û–ù–ï–ù–¢: –ö–ê–†–¢–ö–ê –á–ñ–Ü (–Ü–ú–Ü–¢–ê–¶–Ü–Ø –ê–°–ï–¢–ê) ---
const MealCard: React.FC<{ item: MealItem }> = ({ item }) => {
  return (
    <TouchableOpacity style={styles.cardContainer}>
      {/* –Ü–º—ñ—Ç–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –±–ª–æ–∫—É —Ç–∞ –µ–º–æ–¥–∑—ñ */}
      <View
        style={[styles.cardImagePlaceholder, { backgroundColor: item.color }]}
      >
        <Text style={styles.cardEmoji}>{item.emoji}</Text>
      </View>

      {/* –û–≤–µ—Ä–ª–µ–π –∑–∞–≤–∂–¥–∏ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –≤–Ω–∏–∑—É, —è–∫ –Ω–∞ –º–∞–∫–µ—Ç—ñ */}
      <View style={styles.cardOverlay}>
        <Text style={styles.cardTitle}>{item.title}</Text>
        <View style={styles.cardRestaurant}>
          {/* –Ü–∫–æ–Ω–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ Ionicons */}
          <Ionicons name="home-outline" size={14} color="#fff" />
          <Text style={styles.cardRestaurantText}>{item.restaurant}</Text>
        </View>
      </View>
    </TouchableOpacity>
  );
};

// --- –ö–û–ú–ü–û–ù–ï–ù–¢: –°–ï–ö–¶–Ü–Ø –ó–Ü –°–ü–ò–°–ö–û–ú ---
const MealSection: React.FC<{ title: string; data: MealItem[] }> = ({
  title,
  data,
}) => {
  return (
    <View style={styles.sectionContainer}>
      <View style={styles.sectionHeader}>
        <Text style={styles.sectionTitle}>{title}</Text>
        <TouchableOpacity
          onPress={() => console.log(`–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ ${title}`)}
        >
          <Text style={styles.viewAllText}>View All</Text>
        </TouchableOpacity>
      </View>
      <FlatList
        data={data}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => <MealCard item={item} />}
        horizontal
        showsHorizontalScrollIndicator={false}
        contentContainerStyle={styles.horizontalList}
      />
    </View>
  );
};

// --- –ö–û–ú–ü–û–ù–ï–ù–¢: –ù–ò–ñ–ù–Ø –ü–ê–ù–ï–õ–¨ –ù–ê–í–Ü–ì–ê–¶–Ü–á (TAB BAR) ---
const TabBar: React.FC = () => {
  const tabs = [
    { name: "Home", icon: "home-outline", active: false },
    { name: "Discovery", icon: "search", active: true }, // –ê–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞
    { name: "Chats", icon: "chatbubbles-outline", active: false },
    { name: "My Friends", icon: "people-outline", active: false },
    { name: "Profile", icon: "person-outline", active: false },
  ];

  return (
    <View style={styles.tabBarContainer}>
      {tabs.map((tab) => (
        <TouchableOpacity
          key={tab.name}
          style={styles.tabItem}
          onPress={() => console.log(`–ù–∞—Ç–∏—Å–Ω—É—Ç–æ: ${tab.name}`)}
        >
          <Ionicons
            name={tab.icon as any}
            size={24}
            color={tab.active ? "#E57373" : "#a0a0a0"}
          />
          <Text
            style={[
              styles.tabText,
              { color: tab.active ? "#E57373" : "#a0a0a0" },
            ]}
          >
            {tab.name}
          </Text>
        </TouchableOpacity>
      ))}
    </View>
  );
};

// --- –û–°–ù–û–í–ù–ò–ô –ï–ö–†–ê–ù DISCOVERY ---
const DiscoveryScreen: React.FC = () => {
  const [searchQuery, setSearchQuery] = useState("");

  const handleFilter = () => {
    console.log("–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –§—ñ–ª—å—Ç—Ä");
  };

  return (
    <SafeAreaView style={styles.safeArea}>
      <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
        {/* –ü–æ—Ç–æ—á–Ω–∞ –ª–æ–∫–∞—Ü—ñ—è */}
        <View style={styles.locationContainer}>
          <Text style={styles.locationLabel}>Current location</Text>
          <View style={styles.locationDetails}>
            <Ionicons name="location-sharp" size={20} color="#000" />
            <Text style={styles.locationText}>Gading Serpong, Toronto</Text>
          </View>
        </View>

        {/* –†—è–¥–æ–∫ –ø–æ—à—É–∫—É */}
        <View style={styles.searchContainer}>
          <Ionicons
            name="search-outline"
            size={20}
            color="#a0a0a0"
            style={styles.searchIcon}
          />
          <TextInput
            style={styles.searchInput}
            placeholder="Search anything...."
            placeholderTextColor="#a0a0a0"
            value={searchQuery}
            onChangeText={setSearchQuery}
            returnKeyType="search"
          />
          <TouchableOpacity style={styles.filterButton} onPress={handleFilter}>
            {/* –Ü–∫–æ–Ω–∫–∞ —Ñ—ñ–ª—å—Ç—Ä–∞ */}
            <Ionicons name="options-outline" size={20} color="#fff" />
          </TouchableOpacity>
        </View>

        {/* –°–µ–∫—Ü—ñ—ó –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π */}
        <MealSection title="Recommended for you:" data={mockMeals} />

        <MealSection title="Gluten-Free:" data={mockMeals.slice(1, 4)} />

        {/* –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Å–µ–∫—Ü—ñ—ó */}
        <MealSection title="Vegetarian:" data={mockMeals.slice(0, 3)} />

        <MealSection title="Vegan:" data={mockMeals.slice(3, 6)} />

        {/* –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –≤—ñ–¥—Å—Ç—É–ø, —â–æ–± –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –ø–µ—Ä–µ–∫—Ä–∏–≤–∞–≤—Å—è Tab Bar */}
        <View style={{ height: 100 }} />
      </ScrollView>

      {/* –ù–∏–∂–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
      <TabBar />
    </SafeAreaView>
  );
};

// --- –°–¢–ò–õ–Ü ---

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: "#fff",
  },
  container: {
    flex: 1,
    paddingHorizontal: 20,
    paddingTop: 10,
  },

  // --- –õ–æ–∫–∞—Ü—ñ—è ---
  locationContainer: {
    marginBottom: 20,
  },
  locationLabel: {
    fontSize: 14,
    color: "#a0a0a0",
    fontWeight: "500",
    marginBottom: 4,
  },
  locationDetails: {
    flexDirection: "row",
    alignItems: "center",
  },
  locationText: {
    fontSize: 18,
    fontWeight: "700",
    color: "#000",
    marginLeft: 5,
  },

  // --- –ü–æ—à—É–∫ ---
  searchContainer: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#f0f0f0",
    borderRadius: 12,
    height: 50,
    marginBottom: 25,
    paddingLeft: 10,
  },
  searchIcon: {
    marginRight: 8,
  },
  searchInput: {
    flex: 1,
    fontSize: 16,
    color: "#000",
    height: "100%",
  },
  filterButton: {
    backgroundColor: "#E57373", // –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏ —Ñ—ñ–ª—å—Ç—Ä–∞
    borderRadius: 12,
    height: "100%",
    width: 50,
    justifyContent: "center",
    alignItems: "center",
  },

  // --- –°–µ–∫—Ü—ñ—ó –∫–æ–Ω—Ç–µ–Ω—Ç—É ---
  sectionContainer: {
    marginBottom: 30,
  },
  sectionHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "flex-end",
    marginBottom: 15,
  },
  sectionTitle: {
    fontSize: 22,
    fontWeight: "700",
    color: "#000",
  },
  viewAllText: {
    fontSize: 16,
    fontWeight: "600",
    color: "#E57373",
  },
  horizontalList: {
    // –°—Ç–∏–ª—ñ –¥–ª—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è
  },

  // --- –ö–∞—Ä—Ç–∫–∞ —ó–∂—ñ (–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∞—Å–µ—Ç—ñ–≤) ---
  cardContainer: {
    width: 150,
    height: 220,
    borderRadius: 15,
    overflow: "hidden",
    marginRight: 15,
  },
  cardImagePlaceholder: {
    width: "100%",
    height: "100%",
    position: "absolute",
    borderRadius: 15,
    justifyContent: "center",
    alignItems: "center",
  },
  cardEmoji: {
    fontSize: 60, // –í–µ–ª–∏–∫–µ –µ–º–æ–¥–∑—ñ –∑–∞–º—ñ—Å—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  },
  cardOverlay: {
    position: "absolute",
    bottom: 0,
    left: 0,
    right: 0,
    padding: 10,
    // –ì—Ä–∞–¥—ñ—î–Ω—Ç –∞–±–æ –Ω–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ —Ç–µ–∫—Å—Ç—É
    backgroundColor: "rgba(0, 0, 0, 0.4)",
    borderBottomLeftRadius: 15,
    borderBottomRightRadius: 15,
    paddingBottom: 12,
  },
  cardTitle: {
    fontSize: 14,
    fontWeight: "600",
    color: "#fff",
    marginBottom: 4,
  },
  cardRestaurant: {
    flexDirection: "row",
    alignItems: "center",
  },
  cardRestaurantText: {
    fontSize: 12,
    color: "#fff",
    marginLeft: 3,
    fontWeight: "500",
  },

  // --- Tab Bar ---
  tabBarContainer: {
    flexDirection: "row",
    justifyContent: "space-around",
    alignItems: "center",
    height: 80,
    paddingBottom: Platform.OS === "ios" ? 20 : 0,
    backgroundColor: "#fff",
    borderTopWidth: 1,
    borderTopColor: "#f0f0f0",
    position: "absolute",
    bottom: 0,
    left: 0,
    right: 0,
  },
  tabItem: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    paddingTop: 5,
  },
  tabText: {
    fontSize: 12,
    marginTop: 2,
    fontWeight: "600",
  },
});

export default DiscoveryScreen;
