import React from "react";
import {
  StyleSheet,
  Text,
  View,
  SafeAreaView,
  ScrollView,
  TouchableOpacity,
  Dimensions,
  StatusBar,
  Image,
  FlatList,
  ImageSourcePropType,
  ImageBackground,
} from "react-native";
import { Ionicons } from "@expo/vector-icons";

// --- –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –¢–ê –î–ê–ù–Ü ---
const { width } = Dimensions.get("window");

const COLORS = {
  primary: "#E9725C", // –ß–µ—Ä–≤–æ–Ω–æ-–ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
  background: "#FFFFFF",
  textDark: "#1F2937", // –¢–µ–º–Ω–∏–π —Ç–µ–∫—Å—Ç
  textGrey: "#6B7280", // –°—ñ—Ä–∏–π —Ç–µ–∫—Å—Ç
  white: "#FFFFFF",
  divider: "#E5E7EB",
};

// üí° –õ–û–ö–ê–õ–¨–ù–Ü –ó–û–ë–†–ê–ñ–ï–ù–ù–Ø
// –ó–∞–ª–∏—à–∞—î–º–æ –≤–∞—à—ñ —à–ª—è—Ö–∏ require()
const AVATAR_SOURCE =
  require("../components/profile-avatar.jpg") as ImageSourcePropType;
const DISH_1_SOURCE =
  require("../components/sushi-dragons.jpg") as ImageSourcePropType;
const DISH_2_SOURCE =
  require("../components/potatoes-square.jpg") as ImageSourcePropType;

// –î–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é (–í–õ–ê–°–ù–ò–ô –ü–†–û–§–Ü–õ–¨)
const USER_DATA = {
  handle: "@foodie_iryna",
  name: "Iryna Hvozdetka", // –û–Ω–æ–≤–ª–µ–Ω–µ —ñ–º'—è
  stats: [
    { label: "Saved", count: 46 },
    { label: "Friends", count: 212 },
    // –¢—É—Ç –±—É–ª–æ Shared orders —Ç–∞ Shared videos, –∞–ª–µ –Ω–∞ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ —ó—Ö –Ω–µ–º–∞—î
  ],
  avatar: AVATAR_SOURCE,
};

// –Ü–º—ñ—Ç–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "Past Orders" (–°—ñ—Ç–∫–∞)
const PAST_ORDERS_DATA = [
  {
    id: "1",
    dishName: "Sushi Dragons",
    restaurant: "Chefs Hall",
    image: DISH_1_SOURCE,
  },
  {
    id: "2",
    dishName: "Herbed Golden Potatoes",
    restaurant: "A Mano",
    image: DISH_2_SOURCE,
  },
  {
    id: "3",
    dishName: "Sushi Dragons",
    restaurant: "Chefs Hall",
    image: DISH_1_SOURCE,
  },
  {
    id: "4",
    dishName: "Herbed Golden Potatoes",
    restaurant: "A Mano",
    image: DISH_2_SOURCE,
  },
  {
    id: "5",
    dishName: "Sushi Dragons",
    restaurant: "Chefs Hall",
    image: DISH_1_SOURCE,
  },
  {
    id: "6",
    dishName: "Herbed Golden Potatoes",
    restaurant: "A Mano",
    image: DISH_2_SOURCE,
  },
];

// --- –î–û–ü–û–ú–Ü–ñ–ù–Ü –ö–û–ú–ü–û–ù–ï–ù–¢–ò ---

// –°—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω–∞ –∫–∞—Ä—Ç–∫–∞ (46 Saved, 212 Friends)
interface StatItemProps {
  count: number;
  label: string;
}

const StatItem: React.FC<StatItemProps> = ({ count, label }) => (
  <View style={styles.statItem}>
    <Text style={styles.statCount}>{count}</Text>
    <Text style={styles.statLabel}>{label}</Text>
  </View>
);

// –ï–ª–µ–º–µ–Ω—Ç —Å—ñ—Ç–∫–∏ "Past Orders"
// –†–æ–∑–º—ñ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞ —Å—ñ—Ç–∫–∏ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è —è–∫ —à–∏—Ä–∏–Ω–∞ –µ–∫—Ä–∞–Ω–∞ / 3
const GRID_ITEM_SIZE = width / 3;

interface OrderItemProps {
  dishName: string;
  restaurant: string;
  image: ImageSourcePropType;
}

const OrderItem: React.FC<OrderItemProps> = ({
  dishName,
  restaurant,
  image,
}) => (
  <TouchableOpacity style={styles.orderItemContainer}>
    <ImageBackground
      source={image}
      style={styles.orderImage}
      resizeMode="cover"
    >
      <View style={styles.orderTextOverlay}>
        <Text style={styles.orderDishName}>{dishName}</Text>
        <Text style={styles.orderRestaurantName}>{restaurant}</Text>
      </View>
    </ImageBackground>
  </TouchableOpacity>
);

// --- –û–°–ù–û–í–ù–ò–ô –ï–ö–†–ê–ù –ü–†–û–§–Ü–õ–Æ ---

const ProfileScreen: React.FC = () => {
  return (
    <SafeAreaView style={styles.safeArea}>
      <StatusBar barStyle="dark-content" />

      {/* –•–µ–¥–µ—Ä */}
      <View style={styles.header}>
        {/* –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥", –∑–∞–ª–∏—à–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è FriendProfileScreen */}
        <View style={{ width: 28 }} />
        <Text style={styles.headerTitle}>{USER_DATA.handle}</Text>
        <TouchableOpacity onPress={() => console.log("Open Settings")}>
          <Ionicons
            name="settings-outline" // –ó–Ω–∞—á–æ–∫ —à–µ—Å—Ç–µ—Ä—ñ–Ω–∫–∏
            size={24}
            color={COLORS.textDark}
          />
        </TouchableOpacity>
      </View>

      <ScrollView contentContainerStyle={styles.scrollContent}>
        {/* –ë–ª–æ–∫ –ü—Ä–æ—Ñ—ñ–ª—é */}
        <View style={styles.profileBlock}>
          <View style={styles.topRow}>
            {/* –ê–≤–∞—Ç–∞—Ä */}
            <Image source={USER_DATA.avatar} style={styles.avatar} />

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <View style={styles.statsContainer}>
              {USER_DATA.stats.map((stat, index) => (
                <StatItem key={index} count={stat.count} label={stat.label} />
              ))}
              {/* –î–æ–¥–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ,
                  –∞–ª–µ –Ω–∞ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ –ª–∏—à–µ –¥–≤–∞ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
              <View style={styles.statItemPlaceholder} />
              <View style={styles.statItemPlaceholder} />
            </View>
          </View>

          {/* –Ü–º'—è */}
          <Text style={styles.userName}>{USER_DATA.name}</Text>

          {/* !!! –ö–Ω–æ–ø–∫—É "Send message" –í–ò–î–ê–õ–ï–ù–û !!! */}
        </View>
        {/* !!! –°–ø—ñ–ª—å–Ω—ñ –¥—Ä—É–∑—ñ –í–ò–î–ê–õ–ï–ù–û !!! */}

        {/* –†–æ–∑–¥—ñ–ª—é–≤–∞—á —Ç–∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫ "Past Orders" */}
        <View style={styles.pastOrdersHeader}>
          <Text style={styles.pastOrdersTitle}>Past Orders</Text>
        </View>

        {/* –°—ñ—Ç–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å */}
        <FlatList
          data={PAST_ORDERS_DATA}
          renderItem={({ item }) => (
            <OrderItem
              dishName={item.dishName}
              restaurant={item.restaurant}
              image={item.image}
            />
          )}
          keyExtractor={(item) => item.id}
          numColumns={3}
          scrollEnabled={false}
          columnWrapperStyle={styles.columnWrapper}
        />

        {/* –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è —Å–∫—Ä–æ–ª—ñ–Ω–≥—É */}
        <View style={{ height: 50 }} />
      </ScrollView>

      {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∞ –ø–∞–Ω–µ–ª—å (–ë–∞—á–∏–º–æ –Ω–∞ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ, –¥–æ–¥–∞–º–æ –¥–ª—è –ø–æ–≤–Ω–æ—Ç–∏) */}
      <View style={styles.bottomTabBar}>
        <TabBarItem iconName="home-outline" label="Home" active={false} />
        <TabBarItem
          iconName="search-outline"
          label="Discovery"
          active={false}
        />
        <TabBarItem
          iconName="chatbubble-outline"
          label="Chats"
          active={false}
        />
        <TabBarItem
          iconName="people-outline"
          label="My Friends"
          active={false}
        />
        <TabBarItem iconName="person" label="Profile" active={true} />
      </View>
    </SafeAreaView>
  );
};

// --- –ö–û–ú–ü–û–ù–ï–ù–¢ –ï–õ–ï–ú–ï–ù–¢–ê –ù–ò–ñ–ù–¨–û–á –ü–ê–ù–ï–õ–Ü (TabBar) ---
interface TabBarItemProps {
  iconName: keyof typeof Ionicons.glyphMap;
  label: string;
  active: boolean;
}

const TabBarItem: React.FC<TabBarItemProps> = ({ iconName, label, active }) => (
  <TouchableOpacity style={styles.tabBarItem}>
    <Ionicons
      name={iconName}
      size={24}
      color={active ? COLORS.primary : COLORS.textGrey}
    />
    <Text
      style={[
        styles.tabBarLabel,
        { color: active ? COLORS.primary : COLORS.textGrey },
      ]}
    >
      {label}
    </Text>
  </TouchableOpacity>
);

// --- –°–¢–ò–õ–Ü–ó–ê–¶–Ü–Ø ---

const PADDING_HORIZONTAL = 20;
const AVATAR_SIZE = 80;

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: COLORS.background,
  },
  scrollContent: {
    paddingBottom: 20,
  },
  // --- –•–µ–¥–µ—Ä (–ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∞ –ø–∞–Ω–µ–ª—å) ---
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingHorizontal: PADDING_HORIZONTAL,
    paddingVertical: 10,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: "600",
    color: COLORS.textDark,
  },

  // --- –ë–ª–æ–∫ –ü—Ä–æ—Ñ—ñ–ª—é ---
  profileBlock: {
    paddingHorizontal: PADDING_HORIZONTAL,
    paddingVertical: 10,
    borderBottomWidth: 1, // –†–æ–∑–¥—ñ–ª—é–≤–∞—á, —è–∫–∏–π –±—É–≤ –ø—Ä–∏—Å—É—Ç–Ω—ñ–π
    borderBottomColor: COLORS.divider,
  },
  topRow: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 15,
  },
  avatar: {
    width: AVATAR_SIZE,
    height: AVATAR_SIZE,
    borderRadius: AVATAR_SIZE / 2,
    marginRight: 20,
    borderWidth: 2,
    borderColor: COLORS.divider,
  },
  statsContainer: {
    flex: 1,
    flexDirection: "row",
    // –ó–∞–ª–∏—à–∏–º–æ –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è 4 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫ –±—É–ª–æ —Ä–∞–Ω—ñ—à–µ,
    // –∞–ª–µ –∑–∞–ø–æ–≤–Ω–∏–º–æ –ª–∏—à–µ –¥–≤–æ–º–∞, —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è
    justifyContent: "space-around",
  },
  statItem: {
    alignItems: "center",
    flex: 1,
    marginHorizontal: 5,
  },
  statItemPlaceholder: {
    flex: 1, // –î–ª—è —Å–∏–º–µ—Ç—Ä–∏—á–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –¥–≤–æ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    marginHorizontal: 5,
  },
  statCount: {
    fontSize: 20,
    fontWeight: "bold",
    color: COLORS.textDark,
  },
  statLabel: {
    fontSize: 12,
    color: COLORS.textGrey,
    textAlign: "center",
  },
  userName: {
    fontSize: 20, // –¢—Ä–æ—Ö–∏ –º–µ–Ω—à–µ, –Ω—ñ–∂ –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—ñ –¥—Ä—É–≥–∞
    fontWeight: "500", // –ú–µ–Ω—à –∂–∏—Ä–Ω–∏–π, –Ω—ñ–∂ –Ω–∞ –ø—Ä–æ—Ñ—ñ–ª—ñ –¥—Ä—É–≥–∞
    color: COLORS.textDark,
    marginBottom: 20, // –í–µ–ª–∏–∫–∏–π –≤—ñ–¥—Å—Ç—É–ø, –æ—Å–∫—ñ–ª—å–∫–∏ –Ω–µ–º–∞—î –∫–Ω–æ–ø–∫–∏ "Send message"
    paddingTop: 5, // –¢—Ä–æ—Ö–∏ –æ–ø—É—Å—Ç–∏—Ç–∏ –≤—ñ–¥ –∞–≤–∞—Ç–∞—Ä–∞
  },

  // --- –°—ñ—Ç–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å ---
  pastOrdersHeader: {
    paddingHorizontal: PADDING_HORIZONTAL,
    paddingVertical: 15,
  },
  pastOrdersTitle: {
    fontSize: 18,
    fontWeight: "600",
    color: COLORS.textDark,
    textAlign: "center", // –¶–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
  },
  columnWrapper: {
    justifyContent: "flex-start", // –ü–æ—á–∞—Ç–æ–∫ –∑–ª—ñ–≤–∞
  },
  orderItemContainer: {
    width: GRID_ITEM_SIZE,
    height: GRID_ITEM_SIZE * 1.5,
    padding: 1,
  },
  orderImage: {
    flex: 1,
    justifyContent: "flex-end",
    borderRadius: 0,
  },
  orderTextOverlay: {
    padding: 8,
    // –ó–º—ñ–Ω–∏–º–æ —Ñ–æ–Ω, —â–æ–± –≤—ñ–Ω –±—É–≤ –º–µ–Ω—à –ø–æ–º—ñ—Ç–Ω–∏–º –Ω–∞ –≤–∞—à–æ–º—É —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ
    backgroundColor: "rgba(255, 255, 255, 0.7)",
  },
  orderDishName: {
    fontSize: 12,
    fontWeight: "600",
    color: COLORS.textDark, // –¢–µ–º–Ω–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–≤—ñ—Ç–ª–æ–º—É —Ñ–æ–Ω—ñ
  },
  orderRestaurantName: {
    fontSize: 10,
    color: COLORS.textGrey,
  },

  // --- –ù–∏–∂–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∞ –ø–∞–Ω–µ–ª—å (TabBar) ---
  bottomTabBar: {
    flexDirection: "row",
    justifyContent: "space-around",
    paddingVertical: 10,
    borderTopWidth: 1,
    borderTopColor: COLORS.divider,
    backgroundColor: COLORS.white,
    position: "absolute",
    bottom: 0,
    left: 0,
    right: 0,
  },
  tabBarItem: {
    alignItems: "center",
    flex: 1,
  },
  tabBarLabel: {
    fontSize: 10,
    marginTop: 2,
    fontWeight: "500",
  },
});

export default ProfileScreen;
