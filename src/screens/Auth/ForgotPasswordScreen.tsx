import React, { useState } from "react";
import {
  StyleSheet,
  Text,
  View,
  TextInput,
  TouchableOpacity,
  SafeAreaView,
  StatusBar,
  Alert,
  Platform, // –î–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–∏—Ö —Å—Ç–∏–ª—ñ–≤ iOS/Android
} from "react-native";
import { Ionicons } from "@expo/vector-icons";

// --- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ---
const COLORS = {
  primary: "#E9725C", // –¢–µ–º–Ω–æ-–ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π (–∞–∫—Ç–∏–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞)
  buttonInactive: "#F5F5F5", // –°–≤—ñ—Ç–ª–æ-—Å—ñ—Ä–∏–π —Ñ–æ–Ω (–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞)
  buttonTextInactive: "#333333", // –¢–µ–º–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—ó –∫–Ω–æ–ø–∫–∏
  text: "#333333",
  placeholder: "#999999",
  inputBorder: "#CCCCCC",
  white: "#FFFFFF",
};

type ForgotPasswordScreenProps = {
  onBackPress?: () => void;
};

const ForgotPasswordScreen: React.FC<ForgotPasswordScreenProps> = ({
  onBackPress,
}) => {
  const [email, setEmail] = useState("");

  // –ü—Ä–æ—Å—Ç–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∫–Ω–æ–ø–∫–∏ (–∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–≥—ñ–∫—É, –∞–ª–µ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—ó –¥–ª—è –∫–æ–ª—å–æ—Ä—É –∫–Ω–æ–ø–∫–∏)
  const isEmailValid = /\S+@\S+\.\S+/.test(email);

  // –í–∏—Ä—ñ—à—É—î–º–æ, —á–∏ –∫–Ω–æ–ø–∫–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—é –¥–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è (–ª–æ–≥—ñ–∫–∞ UX)
  const isButtonActiveForPress = email.length > 0; // –ù–∞ —Å–∏–º—É–ª—è—Ç–æ—Ä—ñ –∫–Ω–æ–ø–∫–∞ —á–µ—Ä–≤–æ–Ω–∞, –∫–æ–ª–∏ —â–æ—Å—å –≤–≤–µ–¥–µ–Ω–æ

  const handleResetPassword = () => {
    // –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∫—Ä–∞—â–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ isEmailValid
    if (isButtonActiveForPress) {
      Alert.alert(
        "–ó–∞–ø–∏—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ",
        `–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ ${email}`
      );
      console.log("Sending reset link to:", email);
    } else {
      Alert.alert("–ü–æ–º–∏–ª–∫–∞", "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É.");
    }
  };

  // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏: –Ω–∞ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞ –≤–æ–Ω–∞ –∑–∞–≤–∂–¥–∏ –ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∞, —è–∫—â–æ –ø–æ–ª–µ –Ω–µ –ø—É—Å—Ç–µ.
  // –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ, —â–æ–± –≤–æ–Ω–∞ –±—É–ª–∞ –ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–æ—é –ª–∏—à–µ –ø—Ä–∏ –≤–∞–ª—ñ–¥–Ω–æ–º—É email, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ isEmailValid.
  // –¢—É—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è isButtonActiveForPress, —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –≤–∏–≥–ª—è–¥—É —Å–∏–º—É–ª—è—Ç–æ—Ä–∞.
  const buttonBackgroundColor = isButtonActiveForPress
    ? COLORS.primary
    : COLORS.buttonInactive;
  const buttonTextColor = isButtonActiveForPress
    ? COLORS.white
    : COLORS.buttonTextInactive;

  return (
    <SafeAreaView style={styles.safeArea}>
      <StatusBar barStyle="dark-content" backgroundColor={COLORS.white} />

      {/* ‚¨ÖÔ∏è Header –∑ –∫–Ω–æ–ø–∫–æ—é "–Ω–∞–∑–∞–¥" */}
      <View style={styles.header}>
        <TouchableOpacity
          style={styles.backButton}
          onPress={onBackPress || (() => console.log("Go Back"))}
        >
          <Ionicons name="chevron-back" size={24} color={COLORS.text} />
        </TouchableOpacity>
      </View>

      {/* –û—Å–Ω–æ–≤–Ω–∏–π –≤–º—ñ—Å—Ç */}
      <View style={styles.contentContainer}>
        <Text style={styles.title}>Forgot password</Text>
        <Text style={styles.subtitle}>
          Please enter your email{"\n"}to reset the password
        </Text>

        {/* üìß –ü–æ–ª–µ –≤–≤–æ–¥—É Email */}
        <TextInput
          style={styles.input}
          placeholder="example@gmail.com"
          placeholderTextColor={COLORS.placeholder}
          keyboardType="email-address"
          autoCapitalize="none"
          value={email}
          onChangeText={setEmail}
        />

        {/* üîë –ö–Ω–æ–ø–∫–∞ "Reset Password" */}
        <TouchableOpacity
          // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ isButtonActiveForPress –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è, —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –¥–∏–∑–∞–π–Ω—É
          onPress={handleResetPassword}
          disabled={!isButtonActiveForPress}
          style={[styles.button, { backgroundColor: buttonBackgroundColor }]}
        >
          <Text style={[styles.buttonText, { color: buttonTextColor }]}>
            Reset password
          </Text>
        </TouchableOpacity>
      </View>
    </SafeAreaView>
  );
};

// --- –°—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è ---
const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: COLORS.white,
  },
  header: {
    // –ù–∞ —Å–∏–º—É–ª—è—Ç–æ—Ä—ñ –≤—ñ–¥—Å—Ç—É–ø –≤—ñ–¥ –≤–µ—Ä—Ö—É –º–µ–Ω—à–∏–π, –∞–ª–µ —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ –æ—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å SafeAreaView
    flexDirection: "row",
    justifyContent: "flex-start",
    alignItems: "center",
    paddingHorizontal: 20,
    paddingTop: Platform.OS === "android" ? 20 : 0, // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –≤—ñ–¥—Å—Ç—É–ø –¥–ª—è Android
  },
  backButton: {
    padding: 5,
  },
  contentContainer: {
    flex: 1,
    // –ó–º–µ–Ω—à—É—î–º–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π –≤—ñ–¥—Å—Ç—É–ø, —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Å–∏–º—É–ª—è—Ç–æ—Ä—É
    paddingHorizontal: 45,
    paddingTop: 80,
    // –ó–º—ñ–Ω—é—î–º–æ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è –Ω–∞ —Ü–µ–Ω—Ç—Ä, —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Å–∏–º—É–ª—è—Ç–æ—Ä—É
    alignItems: "center",
    width: "100%", // –í–∞–∂–ª–∏–≤–æ –¥–ª—è —Ü–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è
  },
  title: {
    fontSize: 28,
    fontWeight: "bold",
    color: COLORS.text,
    marginBottom: 10,
    // ‚ö†Ô∏è –ö–ª—é—á–æ–≤–∞ –∑–º—ñ–Ω–∞: –¶–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
    textAlign: "center",
  },
  subtitle: {
    fontSize: 16,
    color: COLORS.text,
    lineHeight: 24,
    marginBottom: 40,
    // ‚ö†Ô∏è –ö–ª—é—á–æ–≤–∞ –∑–º—ñ–Ω–∞: –¶–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
    textAlign: "center",
  },
  input: {
    width: "100%",
    height: 50,
    backgroundColor: COLORS.white,
    borderRadius: 8,
    paddingHorizontal: 15,
    fontSize: 16,
    borderWidth: 1,
    borderColor: COLORS.inputBorder,
    marginBottom: 20,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 1,
  },
  button: {
    width: "100%",
    height: 50,
    borderRadius: 8,
    justifyContent: "center",
    alignItems: "center",
  },
  buttonText: {
    fontSize: 16,
    fontWeight: "bold",
  },
});

export default ForgotPasswordScreen;
