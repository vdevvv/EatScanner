import React from "react";
import {
  StyleSheet,
  Text,
  View,
  SafeAreaView,
  ScrollView,
  TouchableOpacity,
  Dimensions,
  StatusBar,
  Image,
  FlatList,
  ImageSourcePropType,
  ImageBackground,
} from "react-native";
import { Ionicons } from "@expo/vector-icons";

// --- –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –¢–ê –î–ê–ù–Ü ---
const { width } = Dimensions.get("window");

const COLORS = {
  primary: "#E9725C", // –ß–µ—Ä–≤–æ–Ω–æ-–ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Send message"
  background: "#FFFFFF",
  textDark: "#1F2937", // –¢–µ–º–Ω–∏–π —Ç–µ–∫—Å—Ç
  textGrey: "#6B7280", // –°—ñ—Ä–∏–π —Ç–µ–∫—Å—Ç
  white: "#FFFFFF",
  divider: "#E5E7EB",
};

// üí° –õ–û–ö–ê–õ–¨–ù–Ü –ó–û–ë–†–ê–ñ–ï–ù–ù–Ø
// –ó–∞–ª–∏—à–∞—î–º–æ –≤–∞—à—ñ —à–ª—è—Ö–∏ require(), —è–∫ –≤–∏ –ø—Ä–æ—Å–∏–ª–∏.
// –ü—Ä–∏–º—ñ—Ç–∫–∞: —Ü—ñ —Ñ–∞–π–ª–∏ –º–∞—é—Ç—å —ñ—Å–Ω—É–≤–∞—Ç–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º–∏ —à–ª—è—Ö–∞–º–∏!

const AVATAR_SOURCE =
  require("../components/profile-avatar.jpg") as ImageSourcePropType;
const DISH_1_SOURCE =
  require("../components/sushi-dragons.jpg") as ImageSourcePropType;
const DISH_2_SOURCE =
  require("../components/potatoes-square.jpg") as ImageSourcePropType;
const FRIEND_1_SOURCE =
  require("../components/friend1.jpg") as ImageSourcePropType;
const FRIEND_2_SOURCE =
  require("../components/friend2.jpg") as ImageSourcePropType;
const FRIEND_3_SOURCE =
  require("../components/friend3.jpg") as ImageSourcePropType;
const FRIEND_4_SOURCE =
  require("../components/friend4.jpg") as ImageSourcePropType;

// –î–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é
const USER_DATA = {
  handle: "@foodie_iryna",
  name: "Talia Gomez",
  stats: [
    { label: "Saved", count: 46 },
    { label: "Friends", count: 212 },
    { label: "Shared orders", count: 212 },
    { label: "Shared videos", count: 212 },
  ],
  mutualFriendsCount: 40,
  avatar: AVATAR_SOURCE,
};

// –Ü–º—ñ—Ç–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑–¥—ñ–ª—É "Past Orders" (–°—ñ—Ç–∫–∞)
const PAST_ORDERS_DATA = [
  {
    id: "1",
    dishName: "Sushi Dragons",
    restaurant: "Chefs Hall",
    image: DISH_1_SOURCE,
  },
  {
    id: "2",
    dishName: "Herbed Golden Potatoes",
    restaurant: "A Mano",
    image: DISH_2_SOURCE,
  },
  {
    id: "3",
    dishName: "Sushi Dragons",
    restaurant: "Chefs Hall",
    image: DISH_1_SOURCE,
  },
  {
    id: "4",
    dishName: "Herbed Golden Potatoes",
    restaurant: "A Mano",
    image: DISH_2_SOURCE,
  },
  {
    id: "5",
    dishName: "Sushi Dragons",
    restaurant: "Chefs Hall",
    image: DISH_1_SOURCE,
  },
  {
    id: "6",
    dishName: "Herbed Golden Potatoes",
    restaurant: "A Mano",
    image: DISH_2_SOURCE,
  },
];

// –Ü–º—ñ—Ç–∞—Ü—ñ—è –∞–≤–∞—Ç–∞—Ä—ñ–≤ —Å–ø—ñ–ª—å–Ω–∏—Ö –¥—Ä—É–∑—ñ–≤
// –î–æ–¥–∞–Ω–æ –±—ñ–ª—å—à–µ –¥—Ä—É–∑—ñ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó —Å–∫—Ä–æ–ª—É
const MUTUAL_FRIENDS = [
  { id: "m1", avatar: FRIEND_1_SOURCE, name: "Max" },
  { id: "m2", avatar: FRIEND_2_SOURCE, name: "Anna" },
  { id: "m3", avatar: FRIEND_3_SOURCE, name: "Tom" },
  { id: "m4", avatar: FRIEND_4_SOURCE, name: "Ira" },
  { id: "m5", avatar: FRIEND_1_SOURCE, name: "Lena" },
  { id: "m6", avatar: FRIEND_2_SOURCE, name: "Nick" },
  { id: "m7", avatar: FRIEND_3_SOURCE, name: "Eva" },
  { id: "m8", avatar: FRIEND_4_SOURCE, name: "Sasha" },
];

// --- –î–û–ü–û–ú–Ü–ñ–ù–Ü –ö–û–ú–ü–û–ù–ï–ù–¢–ò ---

// –°—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω–∞ –∫–∞—Ä—Ç–∫–∞ (46 Saved, 212 Friends, ...)
interface StatItemProps {
  count: number;
  label: string;
}

const StatItem: React.FC<StatItemProps> = ({ count, label }) => (
  <View style={styles.statItem}>
    <Text style={styles.statCount}>{count}</Text>
    <Text style={styles.statLabel}>{label}</Text>
  </View>
);

// –ï–ª–µ–º–µ–Ω—Ç —Å—ñ—Ç–∫–∏ "Past Orders"
const GRID_ITEM_SIZE = width / 3;

interface OrderItemProps {
  dishName: string;
  restaurant: string;
  image: ImageSourcePropType;
}

const OrderItem: React.FC<OrderItemProps> = ({
  dishName,
  restaurant,
  image,
}) => (
  <TouchableOpacity style={styles.orderItemContainer}>
    <ImageBackground
      source={image}
      style={styles.orderImage}
      resizeMode="cover"
    >
      <View style={styles.orderTextOverlay}>
        <Text style={styles.orderDishName}>{dishName}</Text>
        <Text style={styles.orderRestaurantName}>{restaurant}</Text>
      </View>
    </ImageBackground>
  </TouchableOpacity>
);

// --- –û–°–ù–û–í–ù–ò–ô –ï–ö–†–ê–ù ---

const UserProfileScreen: React.FC = () => {
  return (
    <SafeAreaView style={styles.safeArea}>
      <StatusBar barStyle="dark-content" />

      {/* –•–µ–¥–µ—Ä */}
      <View style={styles.header}>
        <TouchableOpacity onPress={() => console.log("Go Back")}>
          <Ionicons name="chevron-back" size={28} color={COLORS.textDark} />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>{USER_DATA.handle}</Text>
        <TouchableOpacity onPress={() => console.log("More Options")}>
          <Ionicons
            name="ellipsis-horizontal"
            size={24}
            color={COLORS.textDark}
          />
        </TouchableOpacity>
      </View>

      <ScrollView contentContainerStyle={styles.scrollContent}>
        {/* –ë–ª–æ–∫ –ü—Ä–æ—Ñ—ñ–ª—é */}
        <View style={styles.profileBlock}>
          <View style={styles.topRow}>
            {/* –ê–≤–∞—Ç–∞—Ä */}
            <Image source={USER_DATA.avatar} style={styles.avatar} />

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <View style={styles.statsContainer}>
              {USER_DATA.stats.map((stat, index) => (
                <StatItem key={index} count={stat.count} label={stat.label} />
              ))}
            </View>
          </View>

          {/* –Ü–º'—è */}
          <Text style={styles.userName}>{USER_DATA.name}</Text>

          {/* –ö–Ω–æ–ø–∫–∞ "Send message" */}
          <TouchableOpacity
            style={styles.messageButton}
            onPress={() => console.log("Send Message")}
          >
            <Text style={styles.messageButtonText}>Send message</Text>
          </TouchableOpacity>
        </View>

        {/* –°–ø—ñ–ª—å–Ω—ñ –¥—Ä—É–∑—ñ (–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª) */}
        <View style={styles.friendsBlockWrapper}>
          <Text style={styles.mutualFriendsText}>
            <Text style={{ fontWeight: "bold" }}>
              {USER_DATA.mutualFriendsCount}
            </Text>{" "}
            Mutual Friends
          </Text>

          {/* ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª */}
          <ScrollView
            horizontal
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.friendsAvatarsScroll}
          >
            {MUTUAL_FRIENDS.map((friend) => (
              <View key={friend.id} style={styles.friendPill}>
                <Image source={friend.avatar} style={styles.friendAvatar} />
                <Text style={styles.friendName}>{friend.name}</Text>
              </View>
            ))}
          </ScrollView>
        </View>

        {/* –†–æ–∑–¥—ñ–ª—é–≤–∞—á —Ç–∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫ "Past Orders" */}
        <View style={styles.pastOrdersHeader}>
          <Text style={styles.pastOrdersTitle}>Past Orders</Text>
        </View>

        {/* –°—ñ—Ç–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å */}
        <FlatList
          data={PAST_ORDERS_DATA}
          renderItem={({ item }) => (
            <OrderItem
              dishName={item.dishName}
              restaurant={item.restaurant}
              image={item.image}
            />
          )}
          keyExtractor={(item) => item.id}
          numColumns={3}
          scrollEnabled={false} // –ù–µ—Ö–∞–π ScrollView –æ–±—Ä–æ–±–ª—è—î —Å–∫—Ä–æ–ª—ñ–Ω–≥
          columnWrapperStyle={styles.columnWrapper}
        />

        {/* –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è —Å–∫—Ä–æ–ª—ñ–Ω–≥—É */}
        <View style={{ height: 50 }} />
      </ScrollView>
    </SafeAreaView>
  );
};

// --- –°–¢–ò–õ–Ü–ó–ê–¶–Ü–Ø ---

const PADDING_HORIZONTAL = 20;
const AVATAR_SIZE = 80;
const FRIEND_AVATAR_SIZE = 50; // –†–æ–∑–º—ñ—Ä –¥–ª—è —Å–∫—Ä–æ–ª—É

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: COLORS.background,
  },
  scrollContent: {
    paddingBottom: 20,
  },
  // --- –•–µ–¥–µ—Ä (–ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∞ –ø–∞–Ω–µ–ª—å) ---
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingHorizontal: PADDING_HORIZONTAL,
    paddingVertical: 10,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: "600",
    color: COLORS.textDark,
  },

  // --- –ë–ª–æ–∫ –ü—Ä–æ—Ñ—ñ–ª—é ---
  profileBlock: {
    paddingHorizontal: PADDING_HORIZONTAL,
    paddingVertical: 10,
    borderBottomWidth: 1,
    borderBottomColor: COLORS.divider,
  },
  topRow: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 15,
  },
  avatar: {
    width: AVATAR_SIZE,
    height: AVATAR_SIZE,
    borderRadius: AVATAR_SIZE / 2,
    marginRight: 20,
    borderWidth: 2,
    borderColor: COLORS.divider, // –ù–µ–≤–µ–ª–∏–∫–∏–π –æ–±—ñ–¥–æ–∫ –Ω–∞–≤–∫–æ–ª–æ –∞–≤–∞—Ç–∞—Ä–∞
  },
  statsContainer: {
    flex: 1,
    flexDirection: "row",
    justifyContent: "space-between",
  },
  statItem: {
    alignItems: "center",
    flex: 1, // –†–æ–∑–ø–æ–¥—ñ–ª –ø—Ä–æ—Å—Ç–æ—Ä—É –º—ñ–∂ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
  },
  statCount: {
    fontSize: 20,
    fontWeight: "bold",
    color: COLORS.textDark,
  },
  statLabel: {
    fontSize: 12,
    color: COLORS.textGrey,
    textAlign: "center",
  },
  userName: {
    fontSize: 22,
    fontWeight: "bold",
    color: COLORS.textDark,
    marginBottom: 15,
  },
  messageButton: {
    backgroundColor: COLORS.primary,
    borderRadius: 8,
    paddingVertical: 12,
    alignItems: "center",
    marginBottom: 20,
  },
  messageButtonText: {
    fontSize: 16,
    fontWeight: "bold",
    color: COLORS.white,
  },

  // --- –°–ø—ñ–ª—å–Ω—ñ –¥—Ä—É–∑—ñ (–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª) ---
  friendsBlockWrapper: {
    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —ñ —Å–∫—Ä–æ–ª
    paddingTop: 10,
    borderBottomWidth: 1,
    borderBottomColor: COLORS.divider,
    marginBottom: 10,
  },
  mutualFriendsText: {
    fontSize: 16,
    color: COLORS.textDark,
    fontWeight: "500",
    marginBottom: 10,
    paddingHorizontal: PADDING_HORIZONTAL, // –í—ñ–¥—Å—Ç—É–ø –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
  },
  friendsAvatarsScroll: {
    paddingHorizontal: PADDING_HORIZONTAL, // –í—ñ–¥—Å—Ç—É–ø –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∫—ñ–Ω—Ü—è —Å–∫—Ä–æ–ª—É
    paddingBottom: 15,
  },
  friendPill: {
    alignItems: "center",
    marginRight: 15, // –í—ñ–¥—Å—Ç—É–ø –º—ñ–∂ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –¥—Ä—É–∑—ñ–≤
    width: 70, // –§—ñ–∫—Å–æ–≤–∞–Ω–∞ —à–∏—Ä–∏–Ω–∞ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ (–∞–≤–∞—Ç–∞—Ä + —ñ–º'—è)
  },
  friendAvatar: {
    width: FRIEND_AVATAR_SIZE,
    height: FRIEND_AVATAR_SIZE,
    borderRadius: FRIEND_AVATAR_SIZE / 2,
    borderWidth: 2,
    borderColor: COLORS.divider,
    marginBottom: 5,
  },
  friendName: {
    fontSize: 12,
    color: COLORS.textGrey,
    textAlign: "center",
    maxWidth: FRIEND_AVATAR_SIZE + 10,
  },
  // --- –°—ñ—Ç–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å ---
  pastOrdersHeader: {
    paddingHorizontal: PADDING_HORIZONTAL,
    paddingVertical: 10,
  },
  pastOrdersTitle: {
    fontSize: 18,
    fontWeight: "600",
    color: COLORS.textDark,
    marginBottom: 10,
  },
  columnWrapper: {
    justifyContent: "flex-start",
  },
  orderItemContainer: {
    width: GRID_ITEM_SIZE,
    height: GRID_ITEM_SIZE * 1.5, // –ü—Ä–∏–±–ª–∏–∑–Ω–æ 2:3 —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω –¥–ª—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å
    padding: 1, // –ù–µ–≤–µ–ª–∏–∫–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä –º—ñ–∂ –ø–ª–∏—Ç–∫–∞–º–∏
  },
  orderImage: {
    flex: 1,
    justifyContent: "flex-end",
    borderRadius: 0,
  },
  orderTextOverlay: {
    padding: 8,
    backgroundColor: "rgba(0, 0, 0, 0.4)",
  },
  orderDishName: {
    fontSize: 12,
    fontWeight: "600",
    color: COLORS.white,
  },
  orderRestaurantName: {
    fontSize: 10,
    color: COLORS.white,
  },
});

export default UserProfileScreen;
